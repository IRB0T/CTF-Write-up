import binascii
import string

e = 65537
N = 17402753872269561189683789728015804161739226574132608523246547736575025918880088258324683618434137425750953083801417788752873533806653147887983573149843947334323940123308663393836756888371304953905879119079961807514247927542870237807999879372103886320736486350753228120757403041303111889475058273409579889640823003901899794960815566352986736718674947164742312539067387066418638741338142218823118883584570113606581799456344580730999756119459693734494242910355620335817146115085638082785441880496867706530015054740290878252391235828202643286715241687801792410426605839934801695212394205523959885507469088651030578417479
dp = 50556243265120178914402995694979526348098014475824549584311095338575746563433866082191187792716812257169411960782522544679697196753321416639905938386202380191006541605000179704107503437108128235164702300014113352676812058410999262578336219341613923221718338590337955241987535914191064426176978435711562591021

c = 2682272494653986277296008609956038621494503041221661461994817849061138004052209788955562215240083747501454928464867044491664042141155966066854414353562348750033901417667197649487764341959560153422738109186520503171701085347202376409122671100331084168069088215207091496571948902191776099411288733037428112067252734959822508640899148356717022205734070371386268890630186799162732014950099997205658983947355968171997231230908471408184083731448944790217830829087771267736988084622729642526322645716667972579378380314541879107004941203865381186127562383692627047880858348574209134522842216400092070232704619125511534675943

def egcd(a, b):
    if a == 0:
        return (b, 0, 1)
    else:
        g, y, x = egcd(b % a, a)
        return (g, x - (b // a) * y, y)

def modinv(a, m):
    g, x, y = egcd(a, m)
    if g != 1:
        raise 'Modular inverse does not exist.'
    else:
        return x % m

def factorize():
    for k in range(2,e):
        p = (e * dp - 1 + k) // k #Solves for p
        if N % p == 0:
            return p
    return -1

p = factorize()
q = N // p

phi = (p - 1) * (q - 1)
d = modinv(e,phi)
print(binascii.unhexlify(hex(pow(c,d,N))[2:]))
