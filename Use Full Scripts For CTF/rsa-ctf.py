import binascii
import string

e = 65537
N = 13846460024876550994772247886219130882266387115407740768381309507768932202604293263194124162682411722018770703114452147017396176826718680559813569637572871929479981780216446240361240046703842003957244637841569243614609995874581572838716405765861318567417833191618694108351227488561612634523237074542501210177422452307414477586315940354934470423414688334105135092817658575980568125949237381676117437429876280688416615606945926716372317719202718085565854789934811396260856104146899881194854550910633459765838967302617856342222601767632499619968668284404721800352853528329251505102130948833606412590455094172144285620839
dp =134098386016846588812129765439029551135325621127585290629426400339237388956287641262507135510351287825909878986289945356779057467828617759182866020463654999348922635161813348464827439814826227744688902513151125445302628014373165166954255318261463992139357491333358991343508904221422569260667299363653161505793


c = 10028464148537908077141235724391617611632034885988081503088575813179970766553247921204443100925179387370713587275555949084127601350991962693334229460036890839005474287636756302266718071025678628041429784800341891110230584175305459110652805243148411050195161254324557898185022450760530597612621613499799204605523194199957848953654240900103757693097602571675752205103414760901304991900120588040262482960759163108970148565392866285631732490871979950381609411832150233393632724433762297615077695912054368986582013900410233564503350780170229553875276918782849010522525328394479520444758633990469439452629619426780826896419


def egcd(a, b):
    if a == 0:
        return (b, 0, 1)
    else:
        g, y, x = egcd(b % a, a)
        return (g, x - (b // a) * y, y)

def modinv(a, m):
    g, x, y = egcd(a, m)
    if g != 1:
        raise 'Modular inverse does not exist.'
    else:
        return x % m

def factorize():
    for k in range(2,e):
        p = (e * dp - 1 + k) // k #Solves for p
        if N % p == 0:
            return p
    return -1

p = factorize()
q = N // p

phi = (p - 1) * (q - 1)
d = modinv(e,phi)
print(binascii.unhexlify(hex(pow(c,d,N))[2:]))
